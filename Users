with 
    active_casters as (
        with 
            casts as (
                SELECT
                    c.fid
                    , sum(case when c.created_at >= now() - interval '7' day then 1 else 0 end) as casts
                    , sum(case when c.created_at between (now() - interval '14' day) and (now() - interval '7' day) then 1 else 0 end) as casts_last
                FROM dune.neynar.dataset_farcaster_casts c
                WHERE c.deleted_at is null
                and c.created_at >= now() - interval '14' day
                -- and c.fid = 16522
                GROUP BY 1
            )
            
            , replies as (
                SELECT
                    c.fid as target_fid
                    , re.fid as source_fid
                    , pf.fname as source_fname
                    , sum(case when c.created_at >= now() - interval '7' day then 1 else 0 end) as got_replies
                    , sum(case when c.created_at between (now() - interval '14' day) and (now() - interval '7' day) then 1 else 0 end) as got_replies_last
                FROM dune.neynar.dataset_farcaster_casts c
                JOIN dune.neynar.dataset_farcaster_casts re ON re.root_parent_hash = c.hash 
                    AND re.deleted_at is null
                    AND re.fid != c.fid
                    AND re.created_at >= now() - interval '14' day
                LEFT JOIN dune.neynar.dataset_farcaster_profile_with_addresses pf ON pf.fid = re.fid
                WHERE c.deleted_at is null
                and c.created_at >= now() - interval '14' day
                GROUP BY 1,2,3
            )
            
            ,  reactions as (
                SELECT 
                    r.target_fid 
                    , r.fid as source_fid
                    , pf.fname as source_fname
                    , sum(case when r.reaction_type = 1 and r.created_at >= now() - interval '7' day then 1 else 0 end) as got_likes
                    , sum(case when r.reaction_type = 2 and r.created_at >= now() - interval '7' day then 1 else 0 end) as got_recasts
                    , sum(case when r.reaction_type = 1 and r.created_at between (now() - interval '14' day) and (now() - interval '7' day) then 1 else 0 end) as got_likes_last
                    , sum(case when r.reaction_type = 2 and r.created_at between (now() - interval '14' day) and (now() - interval '7' day) then 1 else 0 end) as got_recasts_last
                FROM dune.neynar.dataset_farcaster_reactions r
                LEFT JOIN dune.neynar.dataset_farcaster_profile_with_addresses pf ON pf.fid = r.fid
                WHERE r.deleted_at is null
                AND r.created_at >= now() - interval '14' day
                AND r.fid != r.target_fid
                GROUP BY 1,2,3
            )
            
            , engagers as (
                SELECT 
                    COALESCE(r.source_fname, re.source_fname) as source_fname
                    , COALESCE(r.target_fid, re.target_fid) as target_fid
                    , COALESCE(got_likes,0) as got_likes    
                    , COALESCE(got_recasts,0) as got_recasts
                    , COALESCE(got_replies,0) as got_replies
                    , COALESCE(got_likes_last,0) as got_likes_last
                    , COALESCE(got_recasts_last,0) as got_recasts_last
                    , COALESCE(got_replies_last,0) as got_replies_last
                FROM replies r
                FULL OUTER JOIN reactions re ON r.target_fid = re.target_fid AND r.source_fid = re.source_fid
                WHERE COALESCE(r.source_fname, re.source_fname) NOT IN ('degentokenbase','bountybot','bytecast','farcasteradmin.eth'
                                                                        ,'warpcastbot','degentipbot') --remove common bots
            )
            
            , agg_base as (
                SELECT
                    c.fid as fid 
                    , c.casts
                    , c.casts_last
                    , slice(array_agg(e.source_fname 
                        order by (e.got_likes + 3*e.got_recasts + 10*e.got_replies) desc
                        ),1,3) as top_engagers
                    , sum(e.got_replies) as got_replies
                    , sum(e.got_likes) as got_likes
                    , sum(e.got_recasts) as got_recasts
                    , sum(sqrt(e.got_likes) + 3*sqrt(e.got_recasts) + 10*sqrt(e.got_replies)) as engagement
                    , sum(e.got_replies_last) as got_replies_last
                    , sum(e.got_likes_last) as got_likes_last
                    , sum(e.got_recasts_last) as got_recasts_last
                    , sum(sqrt(e.got_likes_last) + 3*sqrt(e.got_recasts_last) + 10*sqrt(e.got_replies_last)) as engagement_last
                FROM casts c
                LEFT JOIN engagers e ON c.fid = e.target_fid
                GROUP BY 1,2,3
            )
            
        SELECT 
            *
        FROM agg_base b
    )
    
    , top_channels as (
        SELECT 
            fid
            , array_agg(
                --special treatment for base
                case when COALESCE(purl.channel_id,try(split(channel_url,'/')[6]),channel_url) = 'onchain-summer' then 'base'
                 else COALESCE(purl.channel_id,try(split(channel_url,'/')[6]),channel_url)
                 end 
                order by casts desc) FILTER (WHERE channel_url is not null) as channel_urls 
        FROM (
            SELECT
                fid
                , COALESCE(parent_url,root_parent_url) as channel_url
                , count(*) as casts
            FROM dune.neynar.dataset_farcaster_casts
            WHERE deleted_at is null
            and created_at >= now() - interval '14' day
            GROUP BY 1,2
        ) c 
        LEFT JOIN dune.dune.dataset_farcaster_early_channels purl ON purl.parent_url = c.channel_url
        GROUP BY 1
    )
    
    , top_domains as (
        with base as (
            SELECT
                c.fid
                , replace(split(regexp_extract(text, 'https://\S*'),'/')[3],'www.','') as domain
                , count(*) as ct
            FROM dune.neynar.dataset_farcaster_casts c
            WHERE c.deleted_at is null
            and c.created_at >= now() - interval '14' day --whole query is 14 day trends
            GROUP BY 1,2
        )
        
        SELECT 
            fid
            , filter(slice(array_agg(domain order by ct desc),1,3),x-> x is not null) as top_domains 
        FROM base
        WHERE domain NOT IN ('warpcast.com','x.com','twitter.com')
        group by 1
    )
    
    , user_blockchain_stats as (
        with fids as (
            SELECT 
            fid
            , custody_address as address
            FROM dune.neynar.dataset_farcaster_fids
            
            UNION ALL
            
            SELECT 
            fid
            -- , from_hex(COALESCE(try(split(claim, '"')[4]), try(split(claim, '''')[4]))) as address
            , from_hex(json_value(claim, 'strict $.address')) as address
            FROM dune.neynar.dataset_farcaster_verifications
        )
        
        SELECT 
        f.fid
        , sum(st.txs) as total_transactions
        , sum(nft_volume_usd + dex_volume_usd) as trading_volume_usd
        , sum(st.contracts_deployed) as contracts_deployed
        , array_agg(address) as addresses
        FROM fids f
        LEFT JOIN dune.dune.result_wallet_all_chain_activity_summary st ON f.address = st.wallet
        group by 1
    )

SELECT 
case --the below tiers are somewhat arbitrary, the follow a power law distribution as one would expect of a social network. 
    when fol.followers >=50000 and ac.casts >=10 and (engagement) >= 5000 then 'ðŸ’Ž vip'
    when fol.followers >=10000 and ac.casts >=10 and (engagement) >= 2500 then 'ðŸ¥‡ influencer'
    when fol.followers >=1000 and ac.casts >=5 and (engagement) >= 500 then 'ðŸ¥ˆ star'
    when fol.followers >=400 and ac.casts >=1 and (engagement) >= 50 then 'ðŸ¥‰ active'
    else 'ðŸ¤– npc'
end as fid_active_tier_name
, case --the below tiers are somewhat arbitrary, the follow a power law distribution as one would expect of a social network. 
    when fol.followers >=50000 and ac.casts >=10 and (engagement) >= 5000 then 4
    when fol.followers >=10000 and ac.casts >=10 and (engagement) >= 2500 then 3
    when fol.followers >=1000 and ac.casts >=5 and (engagement) >= 500 then 2
    when fol.followers >=400 and ac.casts >=1 and (engagement) >= 50 then 1
    else 0
end as fid_active_tier
, case --the below tiers are somewhat arbitrary, the follow a power law distribution as one would expect of a social network. 
    when fol.followers - fol.wow_followers >=50000 and ac.casts_last >=10 and (engagement_last) >= 5000 then 4
    when fol.followers - fol.wow_followers >=10000 and ac.casts_last >=10 and (engagement_last) >= 2500 then 3
    when fol.followers - fol.wow_followers >=1000 and ac.casts_last >=5 and (engagement_last) >= 500 then 2
    when fol.followers - fol.wow_followers >=400 and ac.casts_last >=1 and (engagement_last) >= 50 then 1
    else 0
end as fid_active_tier_last
, ac.fid
, pf.fname
, get_href('https://warpcast.com/' || pf.fname, pf.fname) as fname_link
-- , f.created_at as signed_up_at
, date_diff('day',f.created_at,now()) as account_age
, cardinality(tc.channel_urls) as channels
, slice(tc.channel_urls,1,3) as top_channels
, slice(dm.top_domains,1,2) as top_domains
, COALESCE(fol.followers,0) as followers
, COALESCE(fol.wow_followers,0) as wow_followers
, ac.casts
, ac.casts - ac.casts_last as wow_casts
, engagement
, engagement - engagement_last as wow_engage
, COALESCE(block.total_transactions,0) as total_transactions
, COALESCE(block.trading_volume_usd,0) as trading_volume_usd
, COALESCE(block.contracts_deployed,0) as contracts_deployed
, '||' as split_0
, ac.got_likes
, ac.got_likes - ac.got_likes_last as wow_likes
, ac.got_recasts
, ac.got_recasts - ac.got_recasts_last as wow_recasts
, ac.got_replies
, ac.got_replies - ac.got_replies_last as wow_replies
, ac.top_engagers
, block.addresses
, tc.channel_urls as all_channels
, dm.top_domains as all_domains
FROM active_casters ac
LEFT JOIN (
    --get followers
    SELECT 
        target_fid as fid
        , count(*) as followers
        , sum(case when created_at >= now() - interval '7' day then 1 else 0 end) as wow_followers
    FROM dune.neynar.dataset_farcaster_links
    WHERE deleted_at is null
    GROUP BY 1
    ) fol ON ac.fid = fol.fid
LEFT JOIN (
    SELECT distinct fid, fname, verified_addresses 
    FROM dune.neynar.dataset_farcaster_profile_with_addresses
    ) pf ON pf.fid = ac.fid
LEFT JOIN top_channels tc ON tc.fid = ac.fid
LEFT JOIN dune.neynar.dataset_farcaster_fids f ON f.fid = ac.fid
LEFT JOIN user_blockchain_stats block ON block.fid = ac.fid
LEFT JOIN top_domains dm ON dm.fid = ac.fid
order by followers desc
